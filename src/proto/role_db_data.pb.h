// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: role_db_data.proto

#ifndef PROTOBUF_role_5fdb_5fdata_2eproto__INCLUDED
#define PROTOBUF_role_5fdb_5fdata_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2006000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace ROLE_DB {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_role_5fdb_5fdata_2eproto();
void protobuf_AssignDesc_role_5fdb_5fdata_2eproto();
void protobuf_ShutdownFile_role_5fdb_5fdata_2eproto();

class BASE_DATA;
class ROLE_DATA;

// ===================================================================

class BASE_DATA : public ::google::protobuf::Message {
 public:
  BASE_DATA();
  virtual ~BASE_DATA();

  BASE_DATA(const BASE_DATA& from);

  inline BASE_DATA& operator=(const BASE_DATA& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BASE_DATA& default_instance();

  void Swap(BASE_DATA* other);

  // implements Message ----------------------------------------------

  BASE_DATA* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const BASE_DATA& from);
  void MergeFrom(const BASE_DATA& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint64 role_id = 1;
  inline bool has_role_id() const;
  inline void clear_role_id();
  static const int kRoleIdFieldNumber = 1;
  inline ::google::protobuf::uint64 role_id() const;
  inline void set_role_id(::google::protobuf::uint64 value);

  // required uint64 user_id = 2;
  inline bool has_user_id() const;
  inline void clear_user_id();
  static const int kUserIdFieldNumber = 2;
  inline ::google::protobuf::uint64 user_id() const;
  inline void set_user_id(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:ROLE_DB.BASE_DATA)
 private:
  inline void set_has_role_id();
  inline void clear_has_role_id();
  inline void set_has_user_id();
  inline void clear_has_user_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 role_id_;
  ::google::protobuf::uint64 user_id_;
  friend void  protobuf_AddDesc_role_5fdb_5fdata_2eproto();
  friend void protobuf_AssignDesc_role_5fdb_5fdata_2eproto();
  friend void protobuf_ShutdownFile_role_5fdb_5fdata_2eproto();

  void InitAsDefaultInstance();
  static BASE_DATA* default_instance_;
};
// -------------------------------------------------------------------

class ROLE_DATA : public ::google::protobuf::Message {
 public:
  ROLE_DATA();
  virtual ~ROLE_DATA();

  ROLE_DATA(const ROLE_DATA& from);

  inline ROLE_DATA& operator=(const ROLE_DATA& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ROLE_DATA& default_instance();

  void Swap(ROLE_DATA* other);

  // implements Message ----------------------------------------------

  ROLE_DATA* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ROLE_DATA& from);
  void MergeFrom(const ROLE_DATA& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .ROLE_DB.BASE_DATA base_data = 1;
  inline bool has_base_data() const;
  inline void clear_base_data();
  static const int kBaseDataFieldNumber = 1;
  inline const ::ROLE_DB::BASE_DATA& base_data() const;
  inline ::ROLE_DB::BASE_DATA* mutable_base_data();
  inline ::ROLE_DB::BASE_DATA* release_base_data();
  inline void set_allocated_base_data(::ROLE_DB::BASE_DATA* base_data);

  // @@protoc_insertion_point(class_scope:ROLE_DB.ROLE_DATA)
 private:
  inline void set_has_base_data();
  inline void clear_has_base_data();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::ROLE_DB::BASE_DATA* base_data_;
  friend void  protobuf_AddDesc_role_5fdb_5fdata_2eproto();
  friend void protobuf_AssignDesc_role_5fdb_5fdata_2eproto();
  friend void protobuf_ShutdownFile_role_5fdb_5fdata_2eproto();

  void InitAsDefaultInstance();
  static ROLE_DATA* default_instance_;
};
// ===================================================================


// ===================================================================

// BASE_DATA

// required uint64 role_id = 1;
inline bool BASE_DATA::has_role_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void BASE_DATA::set_has_role_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void BASE_DATA::clear_has_role_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void BASE_DATA::clear_role_id() {
  role_id_ = GOOGLE_ULONGLONG(0);
  clear_has_role_id();
}
inline ::google::protobuf::uint64 BASE_DATA::role_id() const {
  // @@protoc_insertion_point(field_get:ROLE_DB.BASE_DATA.role_id)
  return role_id_;
}
inline void BASE_DATA::set_role_id(::google::protobuf::uint64 value) {
  set_has_role_id();
  role_id_ = value;
  // @@protoc_insertion_point(field_set:ROLE_DB.BASE_DATA.role_id)
}

// required uint64 user_id = 2;
inline bool BASE_DATA::has_user_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void BASE_DATA::set_has_user_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void BASE_DATA::clear_has_user_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void BASE_DATA::clear_user_id() {
  user_id_ = GOOGLE_ULONGLONG(0);
  clear_has_user_id();
}
inline ::google::protobuf::uint64 BASE_DATA::user_id() const {
  // @@protoc_insertion_point(field_get:ROLE_DB.BASE_DATA.user_id)
  return user_id_;
}
inline void BASE_DATA::set_user_id(::google::protobuf::uint64 value) {
  set_has_user_id();
  user_id_ = value;
  // @@protoc_insertion_point(field_set:ROLE_DB.BASE_DATA.user_id)
}

// -------------------------------------------------------------------

// ROLE_DATA

// optional .ROLE_DB.BASE_DATA base_data = 1;
inline bool ROLE_DATA::has_base_data() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ROLE_DATA::set_has_base_data() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ROLE_DATA::clear_has_base_data() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ROLE_DATA::clear_base_data() {
  if (base_data_ != NULL) base_data_->::ROLE_DB::BASE_DATA::Clear();
  clear_has_base_data();
}
inline const ::ROLE_DB::BASE_DATA& ROLE_DATA::base_data() const {
  // @@protoc_insertion_point(field_get:ROLE_DB.ROLE_DATA.base_data)
  return base_data_ != NULL ? *base_data_ : *default_instance_->base_data_;
}
inline ::ROLE_DB::BASE_DATA* ROLE_DATA::mutable_base_data() {
  set_has_base_data();
  if (base_data_ == NULL) base_data_ = new ::ROLE_DB::BASE_DATA;
  // @@protoc_insertion_point(field_mutable:ROLE_DB.ROLE_DATA.base_data)
  return base_data_;
}
inline ::ROLE_DB::BASE_DATA* ROLE_DATA::release_base_data() {
  clear_has_base_data();
  ::ROLE_DB::BASE_DATA* temp = base_data_;
  base_data_ = NULL;
  return temp;
}
inline void ROLE_DATA::set_allocated_base_data(::ROLE_DB::BASE_DATA* base_data) {
  delete base_data_;
  base_data_ = base_data;
  if (base_data) {
    set_has_base_data();
  } else {
    clear_has_base_data();
  }
  // @@protoc_insertion_point(field_set_allocated:ROLE_DB.ROLE_DATA.base_data)
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace ROLE_DB

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_role_5fdb_5fdata_2eproto__INCLUDED
