// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: proto_msgid.proto

#ifndef PROTOBUF_proto_5fmsgid_2eproto__INCLUDED
#define PROTOBUF_proto_5fmsgid_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2006000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_enum_reflection.h>
// @@protoc_insertion_point(includes)

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_proto_5fmsgid_2eproto();
void protobuf_AssignDesc_proto_5fmsgid_2eproto();
void protobuf_ShutdownFile_proto_5fmsgid_2eproto();


enum CS_MESSAGE_ID {
  cs_message_begin = 0,
  cs_message_login = 1,
  cs_message_end = 65535
};
bool CS_MESSAGE_ID_IsValid(int value);
const CS_MESSAGE_ID CS_MESSAGE_ID_MIN = cs_message_begin;
const CS_MESSAGE_ID CS_MESSAGE_ID_MAX = cs_message_end;
const int CS_MESSAGE_ID_ARRAYSIZE = CS_MESSAGE_ID_MAX + 1;

const ::google::protobuf::EnumDescriptor* CS_MESSAGE_ID_descriptor();
inline const ::std::string& CS_MESSAGE_ID_Name(CS_MESSAGE_ID value) {
  return ::google::protobuf::internal::NameOfEnum(
    CS_MESSAGE_ID_descriptor(), value);
}
inline bool CS_MESSAGE_ID_Parse(
    const ::std::string& name, CS_MESSAGE_ID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<CS_MESSAGE_ID>(
    CS_MESSAGE_ID_descriptor(), name, value);
}
enum SC_MESSAGE_ID {
  sc_message_begin = 0,
  sc_message_login = 1,
  sc_message_end = 65535
};
bool SC_MESSAGE_ID_IsValid(int value);
const SC_MESSAGE_ID SC_MESSAGE_ID_MIN = sc_message_begin;
const SC_MESSAGE_ID SC_MESSAGE_ID_MAX = sc_message_end;
const int SC_MESSAGE_ID_ARRAYSIZE = SC_MESSAGE_ID_MAX + 1;

const ::google::protobuf::EnumDescriptor* SC_MESSAGE_ID_descriptor();
inline const ::std::string& SC_MESSAGE_ID_Name(SC_MESSAGE_ID value) {
  return ::google::protobuf::internal::NameOfEnum(
    SC_MESSAGE_ID_descriptor(), value);
}
inline bool SC_MESSAGE_ID_Parse(
    const ::std::string& name, SC_MESSAGE_ID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<SC_MESSAGE_ID>(
    SC_MESSAGE_ID_descriptor(), name, value);
}
// ===================================================================


// ===================================================================


// ===================================================================


// @@protoc_insertion_point(namespace_scope)

#ifndef SWIG
namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::CS_MESSAGE_ID> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::CS_MESSAGE_ID>() {
  return ::CS_MESSAGE_ID_descriptor();
}
template <> struct is_proto_enum< ::SC_MESSAGE_ID> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::SC_MESSAGE_ID>() {
  return ::SC_MESSAGE_ID_descriptor();
}

}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_proto_5fmsgid_2eproto__INCLUDED
