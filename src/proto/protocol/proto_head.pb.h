// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: proto_head.proto

#ifndef PROTOBUF_proto_5fhead_2eproto__INCLUDED
#define PROTOBUF_proto_5fhead_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2006000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_proto_5fhead_2eproto();
void protobuf_AssignDesc_proto_5fhead_2eproto();
void protobuf_ShutdownFile_proto_5fhead_2eproto();

class CS_HEAD;
class SS_HEAD;

// ===================================================================

class CS_HEAD : public ::google::protobuf::Message {
 public:
  CS_HEAD();
  virtual ~CS_HEAD();

  CS_HEAD(const CS_HEAD& from);

  inline CS_HEAD& operator=(const CS_HEAD& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CS_HEAD& default_instance();

  void Swap(CS_HEAD* other);

  // implements Message ----------------------------------------------

  CS_HEAD* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CS_HEAD& from);
  void MergeFrom(const CS_HEAD& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 msgid = 1;
  inline bool has_msgid() const;
  inline void clear_msgid();
  static const int kMsgidFieldNumber = 1;
  inline ::google::protobuf::int32 msgid() const;
  inline void set_msgid(::google::protobuf::int32 value);

  // optional int32 seqid = 2;
  inline bool has_seqid() const;
  inline void clear_seqid();
  static const int kSeqidFieldNumber = 2;
  inline ::google::protobuf::int32 seqid() const;
  inline void set_seqid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:CS_HEAD)
 private:
  inline void set_has_msgid();
  inline void clear_has_msgid();
  inline void set_has_seqid();
  inline void clear_has_seqid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 msgid_;
  ::google::protobuf::int32 seqid_;
  friend void  protobuf_AddDesc_proto_5fhead_2eproto();
  friend void protobuf_AssignDesc_proto_5fhead_2eproto();
  friend void protobuf_ShutdownFile_proto_5fhead_2eproto();

  void InitAsDefaultInstance();
  static CS_HEAD* default_instance_;
};
// -------------------------------------------------------------------

class SS_HEAD : public ::google::protobuf::Message {
 public:
  SS_HEAD();
  virtual ~SS_HEAD();

  SS_HEAD(const SS_HEAD& from);

  inline SS_HEAD& operator=(const SS_HEAD& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SS_HEAD& default_instance();

  void Swap(SS_HEAD* other);

  // implements Message ----------------------------------------------

  SS_HEAD* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SS_HEAD& from);
  void MergeFrom(const SS_HEAD& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 msgid = 1;
  inline bool has_msgid() const;
  inline void clear_msgid();
  static const int kMsgidFieldNumber = 1;
  inline ::google::protobuf::int32 msgid() const;
  inline void set_msgid(::google::protobuf::int32 value);

  // required int32 src_addr = 2;
  inline bool has_src_addr() const;
  inline void clear_src_addr();
  static const int kSrcAddrFieldNumber = 2;
  inline ::google::protobuf::int32 src_addr() const;
  inline void set_src_addr(::google::protobuf::int32 value);

  // optional fixed64 router_id = 3;
  inline bool has_router_id() const;
  inline void clear_router_id();
  static const int kRouterIdFieldNumber = 3;
  inline ::google::protobuf::uint64 router_id() const;
  inline void set_router_id(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:SS_HEAD)
 private:
  inline void set_has_msgid();
  inline void clear_has_msgid();
  inline void set_has_src_addr();
  inline void clear_has_src_addr();
  inline void set_has_router_id();
  inline void clear_has_router_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 msgid_;
  ::google::protobuf::int32 src_addr_;
  ::google::protobuf::uint64 router_id_;
  friend void  protobuf_AddDesc_proto_5fhead_2eproto();
  friend void protobuf_AssignDesc_proto_5fhead_2eproto();
  friend void protobuf_ShutdownFile_proto_5fhead_2eproto();

  void InitAsDefaultInstance();
  static SS_HEAD* default_instance_;
};
// ===================================================================


// ===================================================================

// CS_HEAD

// required int32 msgid = 1;
inline bool CS_HEAD::has_msgid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CS_HEAD::set_has_msgid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CS_HEAD::clear_has_msgid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CS_HEAD::clear_msgid() {
  msgid_ = 0;
  clear_has_msgid();
}
inline ::google::protobuf::int32 CS_HEAD::msgid() const {
  // @@protoc_insertion_point(field_get:CS_HEAD.msgid)
  return msgid_;
}
inline void CS_HEAD::set_msgid(::google::protobuf::int32 value) {
  set_has_msgid();
  msgid_ = value;
  // @@protoc_insertion_point(field_set:CS_HEAD.msgid)
}

// optional int32 seqid = 2;
inline bool CS_HEAD::has_seqid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CS_HEAD::set_has_seqid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CS_HEAD::clear_has_seqid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CS_HEAD::clear_seqid() {
  seqid_ = 0;
  clear_has_seqid();
}
inline ::google::protobuf::int32 CS_HEAD::seqid() const {
  // @@protoc_insertion_point(field_get:CS_HEAD.seqid)
  return seqid_;
}
inline void CS_HEAD::set_seqid(::google::protobuf::int32 value) {
  set_has_seqid();
  seqid_ = value;
  // @@protoc_insertion_point(field_set:CS_HEAD.seqid)
}

// -------------------------------------------------------------------

// SS_HEAD

// required int32 msgid = 1;
inline bool SS_HEAD::has_msgid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SS_HEAD::set_has_msgid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SS_HEAD::clear_has_msgid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SS_HEAD::clear_msgid() {
  msgid_ = 0;
  clear_has_msgid();
}
inline ::google::protobuf::int32 SS_HEAD::msgid() const {
  // @@protoc_insertion_point(field_get:SS_HEAD.msgid)
  return msgid_;
}
inline void SS_HEAD::set_msgid(::google::protobuf::int32 value) {
  set_has_msgid();
  msgid_ = value;
  // @@protoc_insertion_point(field_set:SS_HEAD.msgid)
}

// required int32 src_addr = 2;
inline bool SS_HEAD::has_src_addr() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SS_HEAD::set_has_src_addr() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SS_HEAD::clear_has_src_addr() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SS_HEAD::clear_src_addr() {
  src_addr_ = 0;
  clear_has_src_addr();
}
inline ::google::protobuf::int32 SS_HEAD::src_addr() const {
  // @@protoc_insertion_point(field_get:SS_HEAD.src_addr)
  return src_addr_;
}
inline void SS_HEAD::set_src_addr(::google::protobuf::int32 value) {
  set_has_src_addr();
  src_addr_ = value;
  // @@protoc_insertion_point(field_set:SS_HEAD.src_addr)
}

// optional fixed64 router_id = 3;
inline bool SS_HEAD::has_router_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void SS_HEAD::set_has_router_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void SS_HEAD::clear_has_router_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void SS_HEAD::clear_router_id() {
  router_id_ = GOOGLE_ULONGLONG(0);
  clear_has_router_id();
}
inline ::google::protobuf::uint64 SS_HEAD::router_id() const {
  // @@protoc_insertion_point(field_get:SS_HEAD.router_id)
  return router_id_;
}
inline void SS_HEAD::set_router_id(::google::protobuf::uint64 value) {
  set_has_router_id();
  router_id_ = value;
  // @@protoc_insertion_point(field_set:SS_HEAD.router_id)
}


// @@protoc_insertion_point(namespace_scope)

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_proto_5fhead_2eproto__INCLUDED
